#include<bits/stdc++.h>
vector < int > sortedArray(vector < int > a, vector < int > b) {
    // Write your code here
    int n1 = a.size();
    int n2 = b.size();
    set<int> st;
    for(int i=0;i<n1;i++){
        st.insert(a[i]);
    }
    for(int i=0;i<n2;i++){
        st.insert(b[i]);
    }

    vector<int> ans;
    for(auto it:st){
        ans.push_back(it);
    }
    return ans;
}

//TC - o(n1logn+n2logn) + o(n1+n2)//at worst case
//SC - o(n1+n2)+o(n1+n2)


    int n1 = a.size();
    int n2 = b.size();
    vector<int> unionArr;

    int i=0;
    int j=0;
    while(i<n1 && j<n2){
        if(a[i] <= b[j]){
            if(unionArr.size() == 0 || unionArr.back() != a[i]){
                unionArr.push_back(a[i]);
            }
            i++;
        }
        else{
            if(unionArr.size() == 0 || unionArr.back() != b[j]){
                unionArr.push_back(b[j]);
            }
            j++;
        }

    }
    while(j<n2){
        if(unionArr.size() == 0 || unionArr.back() != b[j]){
            unionArr.push_back(b[j]);
        }
        j++;

    }
    while(i<n1){
        if(unionArr.size() == 0 || unionArr.back() != a[i]){
            unionArr.push_back(a[i]);
        }
        i++;
    }
    return unionArr;

//TC-o(n1+n2)
//SC-o(n1+n2)just to return ans.. not in the algorithm
