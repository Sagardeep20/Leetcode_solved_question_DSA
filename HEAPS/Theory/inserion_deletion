#include<bits/stdc++.h>
using namespace std;
class heaps{
    public:
    int arr[100];
    int size;

    heaps(){
        arr[0] = -1;
        size = 0;
    }

    void insertInHeap(int val){
        size = size+1;
        int index = size;
        arr[index] = val;

        while(index > 1){
            int parent = index/2;
            if(arr[index] > arr[parent]){
                swap(arr[index] , arr[parent]);
                index = parent;
                
            }
            else{
                return;
            }
        }
    }
    void print(){
        for(int i=0;i<=size;i++){
            cout<<arr[i]<<" ";
        }
        cout<<endl;
    }

    void deletFromHeaps(){
        int i=1;
        if(size == 0){
            return;
        }

        arr[i] = arr[size];
        size--;

        while(i < size){
            int leftIdx = 2*i;
            int rightIdx = 2*i + 1;

            if(leftIdx < size && arr[i] < arr[leftIdx]){
                swap(arr[i] , arr[leftIdx]);
                i = leftIdx;
            }
            else if(rightIdx < size && arr[i] < arr[rightIdx]){
                swap(arr[i] , arr[rightIdx]);
                i = rightIdx;
            }
            else{
                return ;
            }
        }
    }




};
int main(){
    heaps h;
    h.insertInHeap(60);
    h.insertInHeap(60);
    h.insertInHeap(20);
    h.insertInHeap(50);
    h.insertInHeap(30);
    h.insertInHeap(55);
    h.insertInHeap(70);

    h.print();
    
    h.deletFromHeaps();
    h.print();
}
