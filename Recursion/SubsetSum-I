class Solution {
  public:
    void func(int idx , int sum , vector<int> &ds , vector<int> &ans , vector<int>& arr){
        if(idx == arr.size()){
            ans.push_back(sum);
            return ;
        }
        
        ds.push_back(arr[idx]);
        sum += arr[idx];
        func(idx+1 , sum , ds,ans , arr);
        
        ds.pop_back();
        sum -= arr[idx];
        func(idx+1 , sum , ds ,ans , arr);
    }
    vector<int> subsetSums(vector<int>& arr) {
        // code here
        int sum = 0;
        vector<int> ds;
        vector<int> ans;
        func(0 , sum , ds , ans , arr);
        return ans;
        
    }


    problem link - https://www.geeksforgeeks.org/problems/subset-sums2234/1&selectedLang=python3
};
