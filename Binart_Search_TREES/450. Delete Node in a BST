TreeNode* findRight(TreeNode* root){
        if(root->right == NULL){
            return root;
        }
        return findRight(root->right);
    }
    TreeNode* helper(TreeNode* root){
        if(root->left == NULL)return root->right;
        if(root->right == NULL)return root->left;

        TreeNode* rightChild = root->right;
        TreeNode* leftMaxRight = findRight(root->left);
        leftMaxRight->right = rightChild;

        return root->left;
    }
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(root == NULL)return NULL;
        if(root->val == key)return helper(root);

        if(root->val > key){
            root->left = deleteNode(root->left , key);
        }
        else if(root->val < key){
            root->right = deleteNode(root->right , key);
        }
        return root;
    }
