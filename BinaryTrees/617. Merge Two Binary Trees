/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* createTree(TreeNode* root1 , TreeNode* root2){
        if(root1== NULL && root2 == NULL)return NULL;

        int newval = 0;
        if(root1 != NULL){
            newval = newval + root1->val;
        }
        if(root2 != NULL){
            newval = newval + root2->val;
        }

        TreeNode* newRoot = new TreeNode(newval);

        newRoot->left = createTree((root1 != NULL ) ? root1->left : NULL, 
                                    (root2 != NULL) ? root2->left : NULL);

        newRoot->right = createTree((root1 != NULL) ? root1->right : NULL, 
                                    (root2 != NULL) ? root2->right : NULL);

        return newRoot;

    }
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        return createTree(root1,root2);
    }
};
