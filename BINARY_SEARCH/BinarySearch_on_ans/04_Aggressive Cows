class Solution {
  public:
    bool canWePlace(vector<int>& stalls , int dist , int cows){
        int cntCows = 1;
        int last = stalls[0];
        for(int i=1 ; i<stalls.size();i++){
            if(stalls[i] - last >= dist){
                last = stalls[i];
                cntCows++;
            }
            if(cntCows >= cows)return true;
        }
        return false;
    }
    int aggressiveCows(vector<int> &stalls, int k) {
        // code here
        sort(stalls.begin(),stalls.end());
        int l = 1, h = stalls[stalls.size() - 1] - stalls[0];
        int ans  = 0;
        while(l <= h){
            int mid = l + (h-l)/2;
            if(canWePlace(stalls , mid , k) == true){
                ans = mid;
                l = mid+1;
            }else{
                h = mid-1;
            }
        }
        return ans;
    }
};

the objective - minimum distance between any two of them is the maximum possible. 

:- min dist is at left side and to get that ans should be attachd with s = mid+1

link- https://www.geeksforgeeks.org/problems/aggressive-cows/1
