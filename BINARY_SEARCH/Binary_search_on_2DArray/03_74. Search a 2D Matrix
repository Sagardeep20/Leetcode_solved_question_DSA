class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        int m = matrix[0].size();
        int l=0,h=(n*m)-1;
        while(l <= h){
            int mid = l + (h-l)/2;
            int row = mid/m;
            int col = mid % m;
            if(matrix[row][col] == target)return true;
            else if(matrix[row][col] < target){
                l = mid+1;
            }else{
                h = mid-1;
            }
        }
        return false;
        
        //Tc-o(log (n*m)) sc-o(1)

        /*
        int n = matrix.size();
        int m = matrix[0].size();
        for(int row = 0;row<n;row++){
            int l = 0,h = m-1;
            if(target >= matrix[row][0] && target<=matrix[row][m-1]){
                while(l<=h){
                    int mid = l+(h-l)/2;
                    if(target == matrix[row][mid]){
                        return true;
                    }else if(target>matrix[row][mid]){
                        l = mid+1;
                    }else{
                        h = mid-1;
                    }
                }
            }
        }
        return false;

        Tc-o(n* logM) sc - o(1)
        */
    }
};
