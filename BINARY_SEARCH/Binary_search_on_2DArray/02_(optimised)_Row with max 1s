// User function template for C++
class Solution {
    
  public:
    int findFirstOccOfOne(vector<int> arr,int m){
        int l = 0,h = m-1;
        int ans = m;
        while(l <= h){
            int mid = l+(h-l)/2;
            if(arr[mid] == 1){
                ans = mid;
                h = mid-1;
            }else{
                l = mid+1;
            }
        }
        return ans;
    }
    int rowWithMax1s(vector<vector<int>> &arr) {
        int n = arr.size();
        int m = arr[0].size();
        int cntMax = 0;
        int index = -1;
        for(int i=0;i<n;i++){
            int cntOnes = m - findFirstOccOfOne(arr[i],m);
            if(cntOnes > cntMax){
                cntMax = cntOnes;
                index = i;
            }
        }
        return index;
        
        
        // code here
        /*
        int n = arr.size();
        int m = arr[0].size();
        
        int cnt = 0,noOfOnes = -1,Rows = -1;
        for(int i=0;i<n;i++){
            cnt = 0;
            for(int j=0;j<m;j++){
                if(arr[i][j] == 1){
                    cnt++;
                }
            }
            if(cnt > noOfOnes){
                noOfOnes = cnt;
                Rows = i;
            }
        }
        return Rows;*/
    }
};

TC-o(n*log2(m))
sc-o(1)
