class Solution {
public:
    //RECURSIVE WAY
    /*
    int func(vector<int>&nums , int s , int h , int target){
        
        if(s>h)return -1;
        int mid = s+(h-s)/2;
        if(nums[mid] == target){
            // ans = mid;
            return mid;
        }
        if(nums[s] <= nums[mid]){
            //left part sorted
            if(target>=nums[s] && target<=nums[mid]){
                return func(nums,s,mid-1,target);
            }else{
                return func(nums,mid+1,h,target);
            }
        }else{
            //right part sorted
            if(target>=nums[mid] && target<=nums[h]){
                return func(nums,mid+1,h,target);
            }else{
                return func(nums,s,mid-1,target);
            }
        }
        
    }*/
    int search(vector<int>& nums, int target) {
        //RECURSIVE
        /*
        int n=nums.size();
        return func(nums,0,n-1,target);
        */

        int n = nums.size();
        int s =0,h=n-1;
        while(s <= h){
            int mid = s+(h-s)/2;

            if(nums[mid] == target){
                return mid;
            }

            if(nums[s] <= nums[mid]){
                if(target >= nums[s] && target<=nums[mid]){
                    h = mid-1;
                }else{
                    s = mid+1;
                }
            }else{
                if(target >= nums[mid] && target<=nums[h]){
                    s = mid+1;
                }else{
                    h = mid-1;
                }
            }
        }
        return -1;
    }
};
