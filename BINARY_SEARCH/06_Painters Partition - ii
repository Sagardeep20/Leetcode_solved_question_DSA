class Solution {
  public:
    bool isPossible(vector<int>& arr ,int k , int mid){
        int sum =0;
        int cnt  = 1;
        for(int i=0;i<arr.size();i++){
            if(arr[i] > mid )return false;
            if(sum + arr[i] <= mid){
                sum += arr[i];
            }else{
                cnt++;
                sum = arr[i];
            }
            
            if(cnt > k)return false;
        }
        return true;
        
    }
    int minTime(vector<int>& arr, int k) {
        // code here
        // if(arr.size() < k)return -1;
        
        int s = 1;
        int h = accumulate(arr.begin(),arr.end(),0);
        int ans = -1;
        while(s <= h){
            int mid = s + (h-s)/2; 
            if(isPossible(arr,k,mid) == true){
                ans  = mid;
                h = mid-1;
            }else{
                s = mid+1;
            }
        }
        return ans;
    }
};

https://www.geeksforgeeks.org/problems/the-painters-partition-problem1535/1
