class Solution {
public:
    int firstOcc(vector<int>& nums, int target ,int n ){
        int s = 0, h = n-1;
        int ans1 = -1;
        while(s<=h){
            int m  = (s+h)/2;
            if(nums[m] == target){
                ans1 = m;
                h = m-1; 
            }
            if(nums[m] < target){
                s = m+1;
            }
            else{
                h = m-1;
            }
        }
        return ans1;
    }
    int lastOcc(vector<int>& nums, int target , int n ){
        int s = 0, h = n-1;
        int ans2 = -1;
        while(s<=h){
            int m = (s+h)/2;
            if(nums[m] == target){
                ans2 = m;
                s = m+1;
            }
            if(nums[m] > target){
                h = m-1;
            }
            else{
                s = m+1;
            }
        }
        return ans2;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        int n = nums.size();
        int first = firstOcc(nums,target,n);
        int last  = lastOcc(nums,target , n);
        return {first,last};
    }
};
