class Solution {
public:
    int firstOcc(vector<int>& nums,int target){
        int n = nums.size();
        int first = -1;
        int s = 0,h=n-1;

        while(s <= h){
            int mid = s + (h-s)/2;
            if(nums[mid] == target){
                first = mid;
                h = mid-1;
            }else if(nums[mid] < target){
                s = mid+1;
            }else{
                h = mid-1;
            }
        }
        return first;
    }
    int lastOcc(vector<int>& nums,int target){
        int n = nums.size();
        int last = -1;
        int s = 0,h=n-1;

        while(s<=h){
            int mid = s + (h-s)/2;
            if(nums[mid] == target){
                last = mid;
                s = mid+1;
            }else if(nums[mid] < target){
                s = mid+1;
            }else{
                h = mid-1;
            }
        }
        return last;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>ans = {firstOcc(nums,target) , lastOcc(nums,target)};
        return ans;
    }
};

TC - o(logn)
sc-o(1)
